buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mod_version}-mc${mc_version}"
group = 'mod.mores'
archivesBaseName = 'mOres'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg');

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                mores {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                mores {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'mores', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                mores {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:23.1.0'

    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'

//    runtimeOnly fg.deobf("curse.maven:attributefix-280510:3232225") //AttributeFix
//    runtimeOnly fg.deobf("curse.maven:caves_and_cliffs-417430:3441420") //Caves and Cliffs
//    runtimeOnly fg.deobf("curse.maven:caves_and_cliffs_api-441706:3413535") //Caves and Cliffs API
//    runtimeOnly fg.deobf("curse.maven:xray-256256:3205011") //XRay for testing ore gen
//    runtimeOnly fg.deobf("curse.maven:hwyla-253449:3033593") // Hwyla for tooltip
//    runtimeOnly fg.deobf("curse.maven:waila_harvestability-79287:3289488") // Harvestability tooltip
//    runtimeOnly fg.deobf("curse.maven:additional_banners-230137:3348557") // Additional Banners
//    runtimeOnly fg.deobf("curse.maven:bookshelf-228525:3474499") // Bookshelf, needed for AB
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "mOres",
                "Specification-Vendor"    : "ItsInfinite",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "leronus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
